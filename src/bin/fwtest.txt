
## ThinFirewall
## IPA シン・テレワークシステムサーバー付属
## 「シン・ファイアウォールシステム」

Enable                      true


WatchOnlyWhenLocked         false


SettingReloadIntervalMsec   1000


WatchPollingIntervalMsec    250


EnableWatchRdp              true

EnableWatchDns              true


EnableWatchTcp              true
EnableTcpHostnameLookup     true
HostnameLookupTimeoutMsec   500

EnableWatchProcess          true
IncludeProcessCommandLine   1


EnableFirewall              false

GetNetworkInfoIntervalMsec  300000

IgnoreDNSoverTCPSession     true

ReportMailIntervalMsec      5000


ReportMailOnlyWhenLocked    false

ReportMailHost              192.168.1.48
ReportMailPort              587
ReportMailUsername          
ReportMailPassword          
ReportMailSslType           0
ReportMailAuthType          0

ReportMailFrom              noreply@softether.co.jp
ReportMailTo                @gmail.com
ReportMailSubjectPrefix     [ThinFirewall $hostname $macaddress]


ReportSyslogOnlyWhenLocked    false

ReportSyslogHost            10.21.2.168
ReportSyslogPort            514
ReportSyslogPrefix          $hostname($macaddress) ThinFirewall:


ReportSaveToDir             true



## ファイアウォールルールの目的
# ロック発動中における通信を規制する。Windows システム上で稼働している
# 他のすべてのファイアウォールと協調して動作する。他のファイアウォール
# によって deny される通信を許容することはない。他方、本ファイアウォール
# で deny された通信は、他のファイアウォールが permit していても破棄
# される。(すなわち、許可は他のファイアウォールとの AND, 拒絶は OR)
# 
# ロック発動時においてすでに確立されているコネクションを引き続き通信許容
# するか、または、直ちに切断するかを選択できる。
# 
# TCP, UDP, ICMP のヘッダ部に係るステートフルパケットインスペクション
# 機能を有している (ペイロードまでは検査しない)。UDP, ICMP については、
# 60 秒の無通信タイムアウトまでは、コネクション性を認識する。




## ファイアウォールルールの優先順位について
# このファイアウォールルール一覧は、常に、上から順に解釈される。
# 上から順に走査し、一番最初に該当するルールの Action (deny / permit) が
# 適用される。


## ファイアウォールルールの書式について
# Protocol: tcp, udp, icmp のいずれか
# Direction: in または out のいずれか
# Type: new または all のいずれか
#       new: 新しいコネクションの確立要求パケットに対して適用されるルール
#       all: 新しいコネクションの確立要求パケットと、
#            ロック発動時の時点ですでに確立済みのコネクションの
#            通信パケットの両方に対して適用されるルール
#  ※ ここでいう「コネクション」の概念の詳解:
#     TCP: 通常の TCP コネクションと同一の概念である。
#     UDP および ICMP: ステートフルパケットインスペクションを実施すること
#                      により、コネクションの概念を形成する。
#                      送信元/宛先 IP, ポート (ICMP の場合はコード等) の
#                      組み合わせによって 1 本のコネクションが識別される。
#                      タイムアウト値は 60 秒であり、60 秒以内に全く通信
#                      がなされないコネクションは切断されたものとみなす。
# Action: permit または deny のいずれか
#  ※ deny は Windows システム上で必ず強制的に適用される。
#        他のファイアウォールが permit していても、無視され、
#        必ず deny が適用される。
#     permit は Windows システム上で他のファイアウォールが deny を
#        行なわない限り適用される。他のファイアウォールのルールにおける
#        deny を上書きすることはない。
# RemoteIP: 8.8.8.0/24 または 2401:1234::/16 のように IPv4 または IPv6 の
#     サブネット長形式で表記する。ただし、スラッシュ / の指定がなければ、
#     単一ホスト (IPv4: サブネット長 24, IPv6: サブネット長 128) と
#     みなされる。IPv4 については、伝統的サブネットマスク形式
#     (例: 10.0.0.0/255.0.0.0) でも記載可能である。
#     下記の特別文字列が存在する。
#     any4: 0.0.0.0/0 (すべての IPv4 アドレス) を意味する。
#     any6: ::/0 (すべての IPv6 アドレス) を意味する。
# RemotePort: 通信相手のホスト側の 1 つのポート、または、ポート番号範囲を
#     記載する。Protocol が icmp の場合は、省略可能である。
#     1 つのポート記載: 443 のように、整数を 1 つ記載する。
#     ポート番号範囲: 135-139 のように、ハイフンで区切って整数を 2 つ
#                     指定する。
#     * を指定すると、1-65535 (すべてのポート) を意味する。
# LocalPort: 自ホスト側の 1 つのポート、または、ポート番号範囲を記載する。
#     Protocol が icmp の場合は、省略可能である。LocalPort と同じ。


## その他の注意事項
# (1) 本ファイアウォールは、本システムそのものの通信には、適用されない。
#     したがって、本システムで syslog または SMTP メール送信機能を利用
#     する場合、明示的な許可は不要である。ただし、DNS 名前解決が必要
#     な場合は、別途 DNS の UDP 通信を明示的に許可する必要がある。
#     (本サンプルファイルでは、DNS の UDP 通信を明示的に許可している。
#      下部の例外 1.3 (1), 1.4 (1) を参照すること。)
# (2) 本ファイアウォールは、Windows システムのファイアウォールルール
#     を変更／上書きすることはない。メモリ上で動作し、本システムが停止
#     したり、ロックが解除されたりすると、メモリ上から消去される。


## ファイアウォール書式:
## Protocol Direction  Type  Action  RemoteIP        RemotePort   LocalPort


## ----------------------------------------------------------------------
## 第 0.1 部: 例外許可の設定 (信頼されているプログラム)
## 'trusted_client' または 'trusted_client' に続いて
## EXE ファイルのフルパスを記入すると、
## そのプログラムは信頼されているプログラムとみなし、
## ファイアウォールルールを適用しない。
## 
## trusted_client: 当該プロセスからの TCP および UDP 通信の発信を許可する。
##                 (クライアントとして振る舞うことを許可する。)
## trusted_server: 当該プロセスにおける TCP および UDP 通信の着信を許可する。
##                 (サーバーとして振る舞うことを許可する。)

# Windows の重要なシステムサービス群
# (Windows Update、AD ドメインログオン、クラウド ID 認証、ライセンス認証
#  等の通信に必要)
trusted_client c:\Windows\System32\svchost.exe
trusted_client C:\WINDOWS\system32\sppsvc.exe
trusted_client C:\WINDOWS\system32\sppextcomobj.exe
trusted_client c:\Windows\System32\lsass.exe
trusted_client C:\Program Files\Windows Defender\MpCmdRun.exe

# Zscaler 社のゼロトラスト製品のトンネル通信サービス
trusted_client C:\Program Files\Zscaler\ZSATunnel\ZSATunnel.exe
trusted_client C:\Program Files\Zscaler\ZSAService\ZSAService.exe
trusted_client C:\Program Files\Zscaler\ZSAUpdater\ZSAUpdater.exe
trusted_client C:\Program Files\Zscaler\ZSAUpm\ZSAUpm.exe
trusted_client C:\Program Files\Zscaler\ZSATrayManager\ZSATrayManager.exe
trusted_client C:\Program Files (x86)\Zscaler\ZSATunnel\ZSATunnel.exe
trusted_client C:\Program Files (x86)\Zscaler\ZSAService\ZSAService.exe
trusted_client C:\Program Files (x86)\Zscaler\ZSAUpdater\ZSAUpdater.exe
trusted_client C:\Program Files (x86)\Zscaler\ZSAUpm\ZSAUpm.exe
trusted_client C:\Program Files (x86)\Zscaler\ZSATrayManager\ZSATrayManager.exe


## ----------------------------------------------------------------------
## 第 0.2 部: 例外許可の設定 (発信方向)
## (このコンピュータが IPv4 TCP/UDP クライアントとなり、ネットワーク上の
##  他のホストに対して接続される IPv4 TCP/UDP コネクションの通信に関する
##  例外的許可)
##
## ロック発動後は、ロック中は原則としてすべての TCP, UDP の発信通信が
## 規制されるが、社内システム等に対する必要的・定期的通信が阻害される
## と、運用管理上の不具合が発生する場合がある。
## たとえば、アップデートサーバーやポリシー配布サーバーとの通信、
## WSUS (Windows Server Update Services) サーバーとの通信、
## 定期的なバックアップのためのバックアップファイルサーバーとの通信、
## 定期的なワークフロー、バッチ等の処理や結果のメール送信、
## Active Directory サーバーとの通信、ログの送付処理等である。
## 
## そこで、ロック発動後も自由な通信を許容したい通信相手の IP アドレス
## やサブネット、ポート番号等のルールを明示的に記載することにより、
## 例外として、それらへの発信通信を常時許容することが可能である。
## 
## なお、DHCP、DNS、syslog の許容ルールは、本ルールファイルの下部のほう
## で別途規定されているので、ここで規定する必要はない。
##
## シン・ファイアウォール機能の下記の多数のルール群による詳細な
## 許可／規制ルールよりも優先して適用される許可ルールを、明示的にここで
## 記載することが推奨される。
## (前述のとおり、ルールは上から順に適用されるため。)
## 
## 以下の例外許可ルールは、コメントアウトされている。実際に利用する場合
## は、コメントアウトを解除し、自由に編集すること。接続先ポート範囲を
## さらに限定することも可能である。

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
#tcp         out        all   permit  192.168.99.0/24 443          *
#udp         out        all   permit  192.168.99.0/24 1234-5678    *
#tcp         out        all   permit  2001:1234::/64  443          *
#udp         out        all   permit  2001:1234::/64  1234-5678    *


## ----------------------------------------------------------------------
## 第 0.3 部: 例外許可の設定 (着信方向)
## (このコンピュータが IPv4 TCP/UDP サーバーとなり、ネットワーク上の
##  他のホストから接続される IPv4 TCP/UDP コネクションの通信に関する
##  例外的許可)
##
## ロック発動後は、ロック中は原則としてすべての TCP, UDP の着信通信が
## 規制されるが、社内システム等に対する必要的・定期的通信が阻害される
## と、運用管理上の不具合が発生する場合がある。
## 
## 以下のような場合が想定される。
## (1) システム管理部門社員が、限定されたシステム管理用サブネットから、
##     本ホストに対して、管理上の正当な目的で、任意のプロトコルで
##     アクセスしたい場合。
## (2) 本ホスト上でサーバーアプリケーション (例: Web サーバー、
##     DB サーバー、ファイル共有サーバー等) を稼働させており、
##     そのサービスは、ロック中でも、特定のクライアントまたは任意の
##     クライアントに対して提供し続けたい場合。
## 
## そこで、ロック発動後も自由な通信を許容したい通信相手の IP アドレス
## やサブネット、ポート番号等のルールを明示的に記載することにより、
## 例外として、それらからの着信通信を常時許容することが可能である。
## 
## なお、RDP の許容ルールは、本ルールファイルの下部のほうで別途規定
## されているので、ここで規定する必要はない。
##
## シン・ファイアウォール機能の下記の多数のルール群による詳細な
## 許可／規制ルールよりも優先して適用される許可ルールを、明示的にここで
## 記載することが推奨される。
## (前述のとおり、ルールは上から順に適用されるため。)
## 
## 以下の例外許可ルールは、コメントアウトされている。実際に利用する場合
## は、コメントアウトを解除し、自由に編集すること。接続先ポート範囲を
## さらに限定することも可能である。

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
#tcp         in         all   permit  192.168.99.0/24 *            8888
#udp         in         all   permit  192.168.99.0/24 *            1234-5678
#tcp         in         all   permit  2001:1234::/64  *            443
#udp         in         all   permit  2001:1234::/64  *            1234-5678


## ----------------------------------------------------------------------
## 第 1.1 部: 発信方向の IPv4 TCP パケットに対する通信規制
## (このコンピュータが IPv4 TCP クライアントとなり、ネットワーク上の
##  他のホストに対して接続される IPv4 TCP コネクションの通信に関する規制)


# 例外 1.1 (1)
# IPv4 の SSH クライアント (宛先: TCP ポート 22)
# ロック発動前にすでに確立されていた接続のみ継続通信を可能とする。
# ロック発動後には、ロック解除まで、新たな接続の確立は禁止される。
# (画面ロック時に毎回接続済みセッションが切れると、大変不便であるため。)
# ※ 許容先 IPv4 アドレスを限定したい場合は、permit の any4 の部分を
#    任意のサブネットに変更すればよい。複数行 permit を書くことも
#    できる。明示的に permit をしなかった場合は、下のほうの行で
#    キャッチオール deny が適用される。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         out        new   deny    any4            22           *
tcp         out        all   permit  any4            22           *


# 例外 1.1 (2)
# IPv4 の RDP クライアント (宛先: TCP ポート 3333)
# ロック発動前にすでに確立されていた接続のみ継続通信を可能とする。
# ロック発動後には、ロック解除まで、新たな接続の確立は禁止される。
# (画面ロック時に毎回接続済みセッションが切れると、大変不便であるため。)
# ※ 許容先 IPv4 アドレスを限定したい場合は、permit の any4 の部分を
#    任意のサブネットに変更すればよい。複数行 permit を書くことも
#    できる。明示的に permit をしなかった場合は、下のほうの行で
#    キャッチオール deny が適用される。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         out        new   deny    any4            3333         *
tcp         out        all   permit  any4            3333         *


# 例外 1.1 (3)
# IPv4 の Windows ファイル共有プロトコル (宛先: TCP ポート 139, 445)
# ロック発動前にすでに確立されていた接続のみ継続通信を可能とする。
# (ただし、LAN 上のプライベート IPv4 アドレスのサーバーとの通信のみ許容)
# ロック発動後には、ロック解除まで、新たな接続の確立は禁止される。
# (画面ロック時に毎回共有サーバーのマウントが解除されると、
#  共有フォルダ上のファイルを開きっぱなしにしている
#  Office アプリケーションの状態がおかしくなり、大変不便であるため。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         out        new   deny    any4            139          *
tcp         out        all   permit  10.0.0.0/8      139          *
tcp         out        all   permit  172.16.0.0/12   139          *
tcp         out        all   permit  192.168.0.0/16  139          *
tcp         out        all   permit  100.64.0.0/10   139          *

tcp         out        new   deny    any4            445          *
tcp         out        all   permit  10.0.0.0/8      445          *
tcp         out        all   permit  172.16.0.0/12   445          *
tcp         out        all   permit  192.168.0.0/16  445          *
tcp         out        all   permit  100.64.0.0/10   445          *


# 原則 1.1
# キャッチオール deny の定義
# 上記の例外のいずれにも該当しない発信方向の IPv4 TCP パケット
# は、すべて以下の行で通信が遮断される (確立済み／未確立の両方を完全遮断)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         out        all   deny    any4            *            *


## ----------------------------------------------------------------------
## 第 1.2 部: 発信方向の IPv6 TCP パケットに対する通信規制
## (このコンピュータが IPv6 TCP クライアントとなり、ネットワーク上の
##  他のホストに対して接続される IPv4 TCP コネクションの通信に関する規制)


# 例外 1.2 (1)
# IPv6 の SSH クライアント (宛先: TCP ポート 22)
# ロック発動前にすでに確立されていた接続のみ継続通信を可能とする。
# ロック発動後には、ロック解除まで、新たな接続の確立は禁止される。
# (画面ロック時に毎回接続済みセッションが切れると、大変不便であるため。)
# ※ 許容先 IPv6 アドレスを限定したい場合は、permit の any6 の部分を
#    任意のサブネットに変更すればよい。複数行 permit を書くことも
#    できる。明示的に permit をしなかった場合は、下のほうの行で
#    キャッチオール deny が適用される。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         out        new   deny    any6            22           *
tcp         out        all   permit  any6            22           *


# 例外 1.2 (2)
# IPv6 の RDP クライアント (宛先: TCP ポート 3333)
# ロック発動前にすでに確立されていた接続のみ継続通信を可能とする。
# ロック発動後には、ロック解除まで、新たな接続の確立は禁止される。
# (画面ロック時に毎回接続済みセッションが切れると、大変不便であるため。)
# ※ 許容先 IPv6 アドレスを限定したい場合は、permit の any6 の部分を
#    任意のサブネットに変更すればよい。複数行 permit を書くことも
#    できる。明示的に permit をしなかった場合は、下のほうの行で
#    キャッチオール deny が適用される。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         out        new   deny    any6            3333         *
tcp         out        all   permit  any6            3333         *


# 原則 1.2
# キャッチオール deny の定義
# 上記の例外のいずれにも該当しない発信方向の IPv6 TCP パケット
# は、すべて以下の行で通信が遮断される (確立済み／未確立の両方を完全遮断)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         out        all   deny    any6            *            *


## ----------------------------------------------------------------------
## 第 1.3 部: 発信方向の IPv4 UDP パケットに対する通信規制
## (このコンピュータが IPv4 UDP クライアントとなり、ネットワーク上の
##  他のホストに対して接続される IPv4 UDP コネクションの通信に関する規制)


# 例外 1.3 (1) 以下の IPv4 UDP 通信の発信を特別に許容する
# ・ IPv4 の DNS クライアント    (宛先: UDP ポート 53)
# ・ IPv4 の DHCP クライアント   (宛先: UDP ポート 67)
# ・ IPv4 の NTP クライアント    (宛先: UDP ポート 123)
# ・ IPv4 の syslog クライアント (宛先: UDP ポート 514)
# ・ IPv4 の RDP クライアント    (宛先: UDP ポート 3333)
#    ※ 最近の Windows では、RDP 通信について、UDP が利用可能な場合は
#       TCP と併用して高速化を図っている。その通信が切れないように
#       するため。
#    (ただし、ロック発動前にすでに確立されていた接続のみ継続通信を
#     可能とする。)
# ※ 許容先 IPv4 アドレスを限定したい場合は、permit の any4 の部分を
#    任意のサブネットに変更すればよい。複数行 permit を書くことも
#    できる。明示的に permit をしなかった場合は、下のほうの行で
#    キャッチオール deny が適用される。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
udp         out        all   permit  any4            53           *
udp         out        all   permit  any4            67           *
udp         out        all   permit  any4            123          *
udp         out        all   permit  any4            514          *
udp         out        new   permit  any4            3333         *


# 原則 1.3
# キャッチオール deny の定義
# 上記の例外のいずれにも該当しない発信方向の IPv4 UDP パケット
# は、すべて以下の行で通信が遮断される (確立済み／未確立の両方を完全遮断)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
udp         out        all   deny    any4            *            *


## ----------------------------------------------------------------------
## 第 1.4 部: 発信方向の IPv4 UDP パケットに対する通信規制
## (このコンピュータが IPv4 UDP クライアントとなり、ネットワーク上の
##  他のホストに対して接続される IPv4 UDP コネクションの通信に関する規制)


# 例外 1.4 (1) 以下の IPv6 UDP 通信の発信を特別に許容する
# ・ IPv6 の DNS クライアント  (宛先: UDP ポート 53)
# ・ IPv6 の DHCP クライアント (宛先: UDP ポート 547)
# ・ IPv6 の NTP クライアント (宛先: UDP ポート 123)
# ・ IPv6 の syslog クライアント (宛先: UDP ポート 514)
# ・ IPv6 の RDP クライアント  (宛先: UDP ポート 3333)
#    ※ 最近の Windows では、RDP 通信について、UDP が利用可能な場合は
#       TCP と併用して高速化を図っている。その通信が切れないように
#       するため。
#    (ただし、ロック発動前にすでに確立されていた接続のみ継続通信を
#     可能とする。)
# ※ 許容先 IPv6 アドレスを限定したい場合は、permit の any6 の部分を
#    任意のサブネットに変更すればよい。複数行 permit を書くことも
#    できる。明示的に permit をしなかった場合は、下のほうの行で
#    キャッチオール deny が適用される。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
udp         out        all   permit  any6            53           *
udp         out        all   permit  any6            547          *
udp         out        all   permit  any6            123          *
udp         out        all   permit  any6            514          *
udp         out        new   permit  any6            3333         *


# 原則 1.4
# キャッチオール deny の定義
# 上記の例外のいずれにも該当しない発信方向の IPv4 UDP パケット
# は、すべて以下の行で通信が遮断される (確立済み／未確立の両方を完全遮断)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
udp         out        all   deny    any6            *            *



## ----------------------------------------------------------------------
## 第 2.1 部: 着信方向の IPv4 TCP パケットに対する通信規制
## (このコンピュータが IPv4 TCP サーバーとなり、ネットワーク上の他のホスト
##  がクライアントとなり、このコンピュータに対して接続される
##  IPv4 TCP コネクションの通信に関する規制)


# 例外 2.1 (1)
# IPv4 の RDP クライアント (宛先: TCP ポート 3333)
# ロック発動後であっても、RDP クライアントの接続は許容する。
# ※ 許容元 IPv4 アドレスを限定したい場合は、permit の any4 の部分を
#    任意のサブネットに変更すればよい。複数行 permit を書くことも
#    できる。明示的に permit をしなかった場合は、下のほうの行で
#    キャッチオール deny が適用される。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         in         all   permit  any4            *            3333


# 例外 2.1 (2)
# IPv4 の Windows ファイル共有プロトコル (宛先: TCP ポート 139, 445)
# ロック発動前にすでに確立されていた接続のみ継続通信を可能とする。
# (ただし、LAN 上のプライベート IPv4 アドレスのクライアントとの通信のみ許容)
# ロック発動後には、ロック解除まで、新たな接続の確立は禁止される。
# (画面ロック時に毎回共有サーバーのマウントが解除されると、
#  本 PC の共有フォルダ上のファイルを開きっぱなしにしている他 PC の
#  ユーザーが突然切断され、Office アプリケーションの状態がおかしくなり、
#  大変不便であるため。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         in         new   deny    any4            *            139
tcp         in         all   permit  10.0.0.0/8      *            139
tcp         in         all   permit  172.16.0.0/12   *            139
tcp         in         all   permit  192.168.0.0/16  *            139
tcp         in         all   permit  100.64.0.0/10   *            139

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         in         new   deny    any4            *            445
tcp         in         all   permit  10.0.0.0/8      *            445
tcp         in         all   permit  172.16.0.0/12   *            445
tcp         in         all   permit  192.168.0.0/16  *            445
tcp         in         all   permit  100.64.0.0/10   *            445


# 原則 2.1
# キャッチオール deny の定義
# 上記の例外のいずれにも該当しない発信方向の IPv4 TCP パケット
# は、すべて以下の行で通信が遮断される (確立済み／未確立の両方を完全遮断)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         in         all   deny    any4            *            *


## ----------------------------------------------------------------------
## 第 2.2 部: 着信方向の IPv6 TCP パケットに対する通信規制
## (このコンピュータが IPv6 TCP サーバーとなり、ネットワーク上の他のホスト
##  がクライアントとなり、このコンピュータに対して接続される
##  IPv6 TCP コネクションの通信に関する規制)


# 例外 2.2 (1)
# IPv6 の RDP クライアント (宛先: TCP ポート 3333)
# ロック発動後であっても、RDP クライアントの接続は許容する。
# ※ 許容元 IPv6 アドレスを限定したい場合は、permit の any6 の部分を
#    任意のサブネットに変更すればよい。複数行 permit を書くことも
#    できる。明示的に permit をしなかった場合は、下のほうの行で
#    キャッチオール deny が適用される。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         in         all   permit  any6            *            3333


# 原則 2.2
# キャッチオール deny の定義
# 上記の例外のいずれにも該当しない発信方向の IPv6 TCP パケット
# は、すべて以下の行で通信が遮断される (確立済み／未確立の両方を完全遮断)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         in         all   deny    any6            *            *


## ----------------------------------------------------------------------
## 第 2.3 部: 着信方向の IPv4 UDP パケットに対する通信規制
## (このコンピュータが IPv4 UDP サーバーとなり、ネットワーク上の他のホスト
##  がクライアントとなり、このコンピュータに対して接続される
##  IPv4 UDP コネクションの通信に関する規制)

# 例外 2.3 (1)
# IPv4 の RDP クライアント (宛先: UDP ポート 3333)
# ロック発動後であっても、RDP クライアントの接続は許容する。
#    ※ 最近の Windows では、RDP 通信について、UDP が利用可能な場合は
#       TCP と併用して高速化を図っている。その通信を許容するのである。
# ※ 許容元 IPv4 アドレスを限定したい場合は、permit の any4 の部分を
#    任意のサブネットに変更すればよい。複数行 permit を書くことも
#    できる。明示的に permit をしなかった場合は、下のほうの行で
#    キャッチオール deny が適用される。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
udp         in         all   permit  any4            *            3333


# 原則 2.3
# キャッチオール deny の定義
# 上記の例外のいずれにも該当しない発信方向の IPv4 UDP パケット
# は、すべて以下の行で通信が遮断される (確立済み／未確立の両方を完全遮断)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
udp         in         all   deny    any4            *            *


## ----------------------------------------------------------------------
## 第 2.4 部: 着信方向の IPv6 UDP パケットに対する通信規制
## (このコンピュータが IPv6 UDP サーバーとなり、ネットワーク上の他のホスト
##  がクライアントとなり、このコンピュータに対して接続される
##  IPv6 UDP コネクションの通信に関する規制)

# 例外 2.4 (1)
# IPv6 の RDP クライアント (宛先: UDP ポート 3333)
# ロック発動後であっても、RDP クライアントの接続は許容する。
#    ※ 最近の Windows では、RDP 通信について、UDP が利用可能な場合は
#       TCP と併用して高速化を図っている。その通信を許容するのである。
# ※ 許容元 IPv6 アドレスを限定したい場合は、permit の any6 の部分を
#    任意のサブネットに変更すればよい。複数行 permit を書くことも
#    できる。明示的に permit をしなかった場合は、下のほうの行で
#    キャッチオール deny が適用される。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
udp         in         all   permit  any6            *            3333


# 原則 2.4
# キャッチオール deny の定義
# 上記の例外のいずれにも該当しない発信方向の IPv6 UDP パケット
# は、すべて以下の行で通信が遮断される (確立済み／未確立の両方を完全遮断)

udp         in         all   deny    any6            *            *


## ----------------------------------------------------------------------
## 第 3 部: 発信・着信方向の IPv4 ICMP, IPv6 ICMP パケットに対する通信規制

# 以下のデフォルトルールでは、IPv4. IPv6 の ICMP は、特に規制を行なわない。
# ここで明示的に permit されていても、Windows やサードパーティの
# ファイアウォールシステムで ICMP に関する細かい規制ルールが制定されている
# 場合は、それらが優先されるので、セキュリティを弱めるおそれはない。
# (本システムのファイアウォールにおける permit 指定よりも、併存する
#  他のファイアウォールシステムによる deny 指定が優先されるため。)
#
# なお、IPv6 の ICMP について明示的に規制を行なうと、IPv6 ND, RA プロトコル
# の通信を阻害するので、注意が必要である。

icmp        in         all   permit  any4
icmp        in         all   permit  any6

icmp        out        all   permit  any4
icmp        out        all   permit  any6


## 糸冬了！！

[END_OF_FILE]


